version = 1

[install]
python.pkg-path = "python3"
python.version = "3.12"


# Helper tools
gum.pkg-path = "gum"
curl.pkg-path = "curl"
coreutils.pkg-path = "coreutils"
figlet.pkg-path = "toilet"
viu.pkg-path = "viu"

# Required for stdc linking
gcc-unwrapped.pkg-path = "gcc-unwrapped"
gcc-unwrapped.systems = [ "aarch64-linux", "x86_64-linux" ]

[vars]
# This token will be used in the query string for our Jupyter
# server. When you clone this environment for your own uses,
# recommend using a proper Identity Provider.
JUPYTER_SERVER_TOKEN="floxfan123456"

# We don't need to see the python venv in our prompt
VIRTUAL_ENV_DISABLE_PROMPT="1"

# The location of an *additional* requirements file containing
# packages to be installed in addition to the Flaim ones
FLOX_FLAIM_ADDITIONAL_REQUIREMENTS_FILE = "requirements.txt"

[hook]
on-activate = '''

# Store our venv and requirements.txt file in the env cache
export FLOX_FLAIM_CACHE_DIR="$FLOX_ENV_CACHE/flaim"
mkdir -p "$FLOX_FLAIM_CACHE_DIR"

export FLOX_FLAIM_REQUIREMENTS_FILE="$FLOX_FLAIM_CACHE_DIR/requirements.txt"

export FLOX_FLAIM_HELPER_DIR="$FLOX_FLAIM_CACHE_DIR/helpers"
mkdir -p "$FLOX_FLAIM_HELPER_DIR"

export FLOX_FLAIM_VENV_PATH="$FLOX_FLAIM_CACHE_DIR/venv"
export FLOX_FLAIM_VENV_INTERPRETER="$(cat "$FLOX_FLAIM_CACHE_DIR/venv.interpreter" 2> /dev/null || echo false )"
export FLOX_FLAIM_INTERPRETER="$(realpath $(which python3))"

# Make sure any tools are not attempting to use the Python interpreter from any
# existing virtual environment.
unset VIRTUAL_ENV


function indent() {
  echo -e '{{ Foreground "#cccccc" " │ "}}' | \
    gum format -t template --theme=auto
}

function with_spinner() {
  if [[ "$FLOX_ENVS_TESTING" == "1" ]]; then
    bash -c "$1"
  else
    echo
    gum spin \
      --show-error \
      --spinner line \
      --spinner.foreground="#cccccc" \
      --title " >>> $2 ..." \
      --title.foreground="#cccccc" \
        -- bash -c "$1"
    echo -en "\033[2A\033[K"
  fi
}

function ensure_venv() {
  "$FLOX_FLAIM_INTERPRETER" -m venv --upgrade-deps "$FLOX_FLAIM_VENV_PATH"
  source "$FLOX_FLAIM_VENV_PATH/bin/activate"
}
export -f ensure_venv

function install_flaim_packages() {
  source "$FLOX_FLAIM_VENV_PATH/bin/activate"
  pip install -r "$FLOX_FLAIM_REQUIREMENTS_FILE"
}
export -f install_flaim_packages

function install_packages() {
  source "$FLOX_FLAIM_VENV_PATH/bin/activate"
  pip install -r "$FLOX_FLAIM_ADDITIONAL_REQUIREMENTS_FILE"
}
export -f install_packages

function create_requirements_file() {
  cat << EOF > "$FLOX_FLAIM_REQUIREMENTS_FILE"
torch==2.6.0
torchvision==0.21.0
diffusers==0.32.2
accelerate==1.4.0
transformers==4.48.3
bitsandbytes==0.42.0
sentencepiece==0.2.0
protobuf==5.29.3
jupyterlab==4.3.5
ipywidgets==8.1.5
EOF
}
export -f create_requirements_file

function gather_helpers() {
  mkdir -p "$FLOX_FLAIM_HELPER_DIR/"

  for helper in testaccel genimg; do
    curl -Ls -o "$FLOX_FLAIM_HELPER_DIR/$helper" "https://github.com/flox/floxenvs/raw/main/flaim/helpers/$helper.py"
    chmod +x "$FLOX_FLAIM_HELPER_DIR/$helper"
  done
}
export -f gather_helpers


indent && echo
indent && echo

if [ "$FLOX_FLAIM_VENV_INTERPRETER" != "$FLOX_FLAIM_INTERPRETER" ]; then
  with_spinner ensure_venv "Creating virtual environment"
  indent && echo -e "{{ Foreground \"#ffffff\" \"✅ Virtual environment was created.\" }}\n" \
    | gum format -t template
else
  indent && echo -e "{{ Foreground \"#ffffff\" \"✅ Virtual environment already exists.\" }}\n" \
    | gum format -t template
fi

indent && echo

if [ ! -f "$FLOX_FLAIM_REQUIREMENTS_FILE" ]; then
  with_spinner create_requirements_file "Creating Flaim requirements file"
  indent && echo -e "{{ Foreground \"#ffffff\" \"✅ Flaim requirements file was created.\" }}\n" \
    | gum format -t template
else
  indent && echo -e "{{ Foreground \"#ffffff\" \"✅ Flaim requirements file already exists.\" }}\n" \
    | gum format -t template
fi

indent && echo

with_spinner install_flaim_packages "Installing Flaim Python packages"
indent && echo -e "{{ Foreground \"#ffffff\" \"✅ Python packages installed.\" }}\n" \
  | gum format -t template

indent && echo

if [ -f "$FLOX_FLAIM_ADDITIONAL_REQUIREMENTS_FILE" ]; then
  with_spinner install_packages "Installing additional Python packages"
  indent && echo -e "{{ Foreground \"#ffffff\" \"✅ Python additional packages installed.\" }}\n" \
    | gum format -t template
else
  indent && echo -e "{{ Foreground \"#ffffff\" \"✅ No need to install additional Python packages.\" }}\n" \
    | gum format -t template
fi

indent && echo

with_spinner gather_helpers "Gathering helper scripts"
indent && echo -e "{{ Foreground \"#ffffff\" \"✅ Helper scripts gathered.\" }}\n" \
  | gum format -t template
export PATH="$FLOX_FLAIM_HELPER_DIR:$PATH"

indent && echo

(
  source "$FLOX_FLAIM_VENV_PATH/bin/activate"
  indent && $FLOX_FLAIM_HELPER_DIR/testaccel
)

indent && echo

toilet -f smmono9 --metal "flaim"

echo "Run 'testaccel' to retest acceleration."
echo "Run 'genimg <string>' for an image."
'''

[services.jupyter-lab]
command = """
source "$FLOX_FLAIM_VENV_PATH/bin/activate"
jupyter-lab --no-browser --IdentityProvider.token=${JUPYTER_SERVER_TOKEN} --ip=0.0.0.0
"""

[profile]
bash = '''
source "$FLOX_FLAIM_VENV_PATH/bin/activate"
if [ "$FLOX_ACTIVATE_START_SERVICES" == "true" ]; then
  echo
  jupyter-lab list
  echo
fi
'''

fish = '''
source "$FLOX_FLAIM_VENV_PATH/bin/activate.fish"
'''

tcsh = '''
source "$FLOX_FLAIM_VENV_PATH/bin/activate.csh"
'''

zsh = '''
source "$FLOX_FLAIM_VENV_PATH/bin/activate"
if [[ "$FLOX_ACTIVATE_START_SERVICES" == "true" ]]; then
  echo
  jupyter-lab list
  echo
fi
'''

[options]
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]


